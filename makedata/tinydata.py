#!/usr/bin/env python
#coding:utf-8
# Author:  mozman --<mozman@gmx.at>
# Purpose: create tiny data
# Created: 30.09.2010
# Copyright (C) 2010, Manfred Moitzi
# License: GPLv3

import sys

from BeautifulSoup import BeautifulSoup

PREFACE = """#!/usr/bin/env python
#coding:utf-8
# generated by:  %s

from svgwrite.properties import SVGProperty

""" % __file__

class SVGProp(object):
    def __init__(self, name, anim, inherit, props):
        self.name = name
        self.anim = anim
        self.inherit = inherit
        self.valid_types = self.get_types(props)
        self.valid_strings = self.get_strings(props)

    def __str__(self):
        return self.name

    def tostring(self):
        return "SVGProperty('%s', anim=%s, inherit=%s,\n    types=%s,\n    strings=%s)" % (
            self.name,
            self.anim,
            self.inherit,
            self.valid_types,
            self.valid_strings)

    def get_types(self, props):
        return [ t[4:-4] for t in props if t.startswith("&lt;") ]

    def get_strings(self, props):
        return [ t[1:-1] for t in props if t.startswith("'") ]

def create_property_data(soup):
    table = soup.find('table', id='properties')
    tbody = table.tbody
    p = {}
    for tr in tbody.findAll('tr'):
        name = tr.find('span').contents[0][1:-1]
        td = tr.findAll('td')
        animateable = (td[1].attrs[0][1] == 'true')
        inherit = (td[2].attrs[0][1] == 'true')
        content = [t.strip() for t in td[3].getText().split('|')]
        prop = SVGProp(name, animateable, inherit, content)
        print prop
        p[prop.name] = prop
    return p

def create_attribute_data(soup):
    table = soup.find('table', id='attributes')
    tbody = table.tbody
    p = {}
    for tr in tbody.findAll('tr'):
        td = tr.findAll('td')
        name = td[0].getText()
        animateable = (td[1].attrs[0][1] == 'true')
        inherit = (td[2].attrs[0][1] == 'true')
        content = [t.strip() for t in td[3].getText().split('|')]
        prop = SVGProp(name, animateable, inherit, content)
        print prop
        p[prop.name] = prop
    return p

def write_properties(name, p):
    f = open(name, 'w')
    f.write(PREFACE)
    f.write("tiny12_svg_properties = { \n")
    keys = p.keys()
    keys.sort()
    for key in keys:
        prop = p[key]
        f.write("    '%s': %s,\n\n" % (prop.name, prop.tostring()))
    f.write("}\n")
    f.close()

def write_check_routines(name, p):
    routines = set()
    for prop in p.itervalues():
        for t in prop.valid_types:
            routines.add(t)
    l = list(routines)
    l.sort()

    f = open(name, 'w')
    for routine in l:
        routine = routine.replace('-', '_')
        f.write("def check_%s(value):\n    #raise ValueError if value if not "\
                "valid\n    return value\n\n" % routine)
    f.close()

def main():
    name = "SVG12Tiny_attributeTable.html"
    f = open(name)
    soup = BeautifulSoup(f.read())
    f.close()

    p = {}
    p.update(create_attribute_data(soup))
    p.update(create_property_data(soup))
    write_properties("tiny12data.py", p)
    write_check_routines("typechecker.py", p)

if __name__=='__main__':
    main()